name: UK - fetch and post

on:
  workflow_dispatch:
  schedule:
    - cron:  '*/15 * * * *'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby 2.7
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7
          bundler-cache: true
      - name: Install jq
        run: sudo apt-get install jq
      - name: Fetch current vaccination uptake
        run: |
          FILE=./data/uptake.json
          url="https://coronavirus.data.gov.uk/api/v1/data?filters=areaName=United%2520Kingdom;areaType=overview&structure=%7B%22areaType%22:%22areaType%22,%22areaName%22:%22areaName%22,%22areaCode%22:%22areaCode%22,%22date%22:%22date%22,%22cumVaccinationFirstDoseUptakeByPublishDatePercentage%22:%22cumVaccinationFirstDoseUptakeByPublishDatePercentage%22,%22cumVaccinationSecondDoseUptakeByPublishDatePercentage%22:%22cumVaccinationSecondDoseUptakeByPublishDatePercentage%22%7D&format=json"
          response=$(curl -f "$url" --compressed)
          status=$?
          if [ $status -eq 0 ]; then
              echo $response > $FILE
              echo "$FILE saved."
          else
              echo "curl exit code: ($status) $response"
              exit $status
          fi
      - name: Get latest uptake percentage
        id: uptake
        run: echo ::set-output name=second::$(cat data/uptake.json | jq '.data[0] | .cumVaccinationSecondDoseUptakeByPublishDatePercentage')
      - name: Format tweet
        id: tweet
        run: echo ::set-output name=formatted::$(bundle exec ruby lib/format_tweet.rb '${{ steps.uptake.outputs.second }}')
      - name: Fetch last tweet
        id: last-tweet
        run: echo ::set-output name=text::$(bundle exec ruby lib/fetch_last_tweet.rb)
        env:
             API_KEY: ${{ secrets.API_KEY }}
             API_KEY_SECRET: ${{ secrets.API_KEY_SECRET }}
             ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN_UK }}
             ACCESS_TOKEN_SECRET: ${{ secrets.ACCESS_TOKEN_SECRET_UK }}
      - name: Debug output
        run: |
          echo ${{ steps.uptake.outputs.second }}
          echo ${{ steps.tweet.outputs.formatted }}
          echo ${{ steps.last-tweet.outputs.text }}
      - name: Tweet current uptake
        if: steps.tweet.outputs.formatted != steps.last-tweet.outputs.text
        uses: devigned/go-twitter-action@v1
        with:
          message: ${{ steps.tweet.outputs.formatted }}
          apiKey: ${{ secrets.API_KEY }}
          apiKeySecret: ${{ secrets.API_KEY_SECRET }}
          accessToken: ${{ secrets.ACCESS_TOKEN_UK }}
          accessTokenSecret: ${{ secrets.ACCESS_TOKEN_SECRET_UK }}
